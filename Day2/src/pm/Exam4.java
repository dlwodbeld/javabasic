package pm;

public class Exam4 {
	public static void main(String[] args) {
//		int a = 85;
//		if (a>= 70 && a < 80) {
//			System.out.println("C학점");
//		}
//
//		else if ( a>= 80 && a < 90) {
//			System.out.println("B");
//		}
//		else if ( a>= 90) { 
//			System.out.println("A");
//		}
//		else {
//			System.out.println("F");
//		}
		
//		int a = 1;
//		int b = 2;
//		
//		// 효율성 & | 를 하나만 사용하면 모든 조건은 모두 확인하여 결정한다.
//				&& || 를두개를 사용하면 조건을 전부 확인하지않고 하나만으로도 결정한다.
//		논리ㅏ 연산자는 비트 연산자와 매우 비슷하지만 피연산자로 불리언(true or false)
//		만  올수있고 연산 결과 또한 불리언 타입만을 지닌다. 논리 and(&&)는 두 값이 모두
//		true 일떄만 ture 나머지는 모두 false 갑을 가진다. 반면 논리 or ||는
//		두 값이 모두 false일떄만 false 이고 나머지는 모두 true이다.
		
//		
//		if (a<3 | b<3) {
//			System.out.println("둘다 3 미만입니다.");
//		}
//		else {
//			System.out.println("둘다3 미만이 아닙니다.");
//		}
//		
		// switch 구문
		//switch는 변수값에 따라서 특정위치 case 로 이동해서 구무늘 길행하는 선택 제어문이다.
		
//		int a = 2;
//		switch(a) {
//		case 1:
//			System.out.println("A");
//		case 2:
//			System.out.println("B");
//		case 3:
//			System.out.println("C");
//		default:
//			System.out.println("0");
//		}
//		
//		int b = 8;
//		switch(b) {
//		case 10:case 9:case 8:case 7:
//			System.out.println("pass");	break;
//		default:
//			System.out.println("fail");
//		}
//		
//		int a = 8;
//		if (a<11 && a> 6) System.out.println("pass");
//		else System.out.println("Fail");
//		
//		int mon = 3;
//		switch(mon) {
//		case 3: case 4:case 5:
//			System.out.println("봄입니다.");
//		
//		case 6: case 7:case 8:
//			System.out.println("여름입니다.");
//		
//		case 9: case 10:case 11:
//			System.out.println("가을입니다.");
//		
//		case 12: case 1:case 2:
//			System.out.println("겨울입니다.");
		
		
//		int mon  = 7;
//		switch(mon /3) {
//		case 1: System.out.println("봄입니다"); break;
//		case 2: System.out.println("여름입니다"); break;
//		case 3: System.out.println("가을입니다"); break;
//		default: System.out.println("겨울입니다");
//		
		
		
		
		
		}
		
		
		
		
}

}
